import{X as o,a as r}from"./index.js";const c={STOP_AI_RUNNING_INSTANCE:"stop-ai-running-instance",RUNNING_STATUS_CHANGE:"running-status-change",OPEN_GLOBAL_CONFIG_DIALOG:"open-global-config-dialog"},u=async(s,e=!1)=>{if(window.ipcRenderer)return await window.ipcRenderer?.invoke(o.SELECT_DIR,s,e)};class g{static checkModelsDirValid(e,t){if(e.subdirs=this.filterSpecialFiles(e.subdirs),e.files=this.filterSpecialFiles(e.files),(!e.subdirs||e.subdirs.length===0)&&(!e.files||e.files.length===0))return!0;const n=new Set(e.subdirs);return t.every(l=>n.has(l))}static filterSpecialFiles(e){if(!e)return e;const t=["desktop.ini",".ds_store","thumbs.db"];return e.filter(n=>{const a=n.toLowerCase();return!t.includes(a)})}}const p=async s=>{let e;try{return(await r.post("/self-manage/common-util/app-running-base-env-info",{keys:s})).data}catch(t){return console.log("err",t),e}},m=async s=>{let e;try{return(await r.post("/self-manage/common-util/save-app-running-base-env-info",{envObj:s})).data}catch(t){return console.log("err",t),e}},d=async()=>{let s;try{s=(await r.get("/self-manage/common-util/lan-ip")).data?.ip}catch(e){console.log("err",e)}return s},h=async()=>{let s;try{s=(await r.get("/self-manage/common-util/user-home-dir")).data?.userHomeDir}catch(e){console.log("err",e)}return s},f=async s=>{let e=0;try{e=(await r.get(`/self-manage/common-util/dir-file-size?dirPath=${s}`)).data?.fileSize}catch(t){console.log("err",t)}return e},y=async s=>{let e=[];try{e=(await r.get(`/self-manage/common-util/installed-model-files/${s}`)).data?.models}catch(t){console.log("err",t)}return e};export{g as D,c as I,f as a,y as b,p as c,d,m as e,h as g,u as s};
