import{I as e,a as t}from"./index.js";const s={STOP_AI_RUNNING_INSTANCE:"stop-ai-running-instance",RUNNING_STATUS_CHANGE:"running-status-change",OPEN_GLOBAL_CONFIG_DIALOG:"open-global-config-dialog"},a=async(t,s=!1)=>{if(window.ipcRenderer)return await(window.ipcRenderer?.invoke(e.SELECT_DIR,t,s))};class n{static checkModelsDirValid(e,t){if(e.subdirs=this.filterSpecialFiles(e.subdirs),e.files=this.filterSpecialFiles(e.files),!(e.subdirs&&0!==e.subdirs.length||e.files&&0!==e.files.length))return!0;const s=new Set(e.subdirs);return t.every((e=>s.has(e)))}static filterSpecialFiles(e){if(!e)return e;const t=["desktop.ini",".ds_store","thumbs.db"];return e.filter((e=>{const s=e.toLowerCase();return!t.includes(s)}))}}const r=async e=>{try{return(await t.post("/self-manage/common-util/app-running-base-env-info",{keys:e})).data}catch(s){return void console.log("err",s)}},i=async e=>{try{return(await t.post("/self-manage/common-util/save-app-running-base-env-info",{envObj:e})).data}catch(s){return void console.log("err",s)}},o=async()=>{let e;try{const s=await t.get("/self-manage/common-util/lan-ip");e=s.data?.ip}catch(s){console.log("err",s)}return e},l=async()=>{let e;try{const s=await t.get("/self-manage/common-util/user-home-dir");e=s.data?.userHomeDir}catch(s){console.log("err",s)}return e},c=async e=>{let s=0;try{const a=await t.get(`/self-manage/common-util/dir-file-size?dirPath=${e}`);s=a.data?.fileSize}catch(a){console.log("err",a)}return s},u=async e=>{let s=[];try{const a=await t.get(`/self-manage/common-util/installed-model-files/${e}`);s=a.data?.models}catch(a){console.log("err",a)}return s};export{n as D,s as I,c as a,u as b,r as c,o as d,i as e,l as g,a as s};
