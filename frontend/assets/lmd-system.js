import{I as e,a as n}from"./index.js";const r=(e,n)=>{const r=e.__vccOpts||e;for(const[i,a]of n)r[i]=a;return r},i={STOP_AI_RUNNING_INSTANCE:"stop-ai-running-instance",RUNNING_STATUS_CHANGE:"running-status-change",OPEN_GLOBAL_CONFIG_DIALOG:"open-global-config-dialog"},a=async(n,r=!1)=>{if(window.ipcRenderer)return await(window.ipcRenderer?.invoke(e.SELECT_DIR,n,r))};class t{static checkModelsDirValid(e,n){if(e.subdirs=this.filterSpecialFiles(e.subdirs),e.files=this.filterSpecialFiles(e.files),!(e.subdirs&&0!==e.subdirs.length||e.files&&0!==e.files.length))return!0;const r=new Set(e.subdirs);return n.every((e=>r.has(e)))}static filterSpecialFiles(e){if(!e)return e;const n=["desktop.ini",".ds_store","thumbs.db"];return e.filter((e=>{const r=e.toLowerCase();return!n.includes(r)}))}}const s=async e=>{try{return(await n.post("/self-manage/common-util/app-running-base-env-info",{keys:e})).data}catch(r){return void console.log("err",r)}},o=async e=>{try{return(await n.post("/self-manage/common-util/save-app-running-base-env-info",{envObj:e})).data}catch(r){return void console.log("err",r)}},c=async()=>{let e;try{const r=await n.get("/self-manage/common-util/lan-ip");e=r.data?.ip}catch(r){console.log("err",r)}return e},d=async()=>{let e;try{const r=await n.get("/self-manage/common-util/user-home-dir");e=r.data?.userHomeDir}catch(r){console.log("err",r)}return e},l=async e=>{let r={};try{r=(await n.get(`/self-manage/common-util/dir-and-disk-info?dirPath=${e}`)).data}catch(i){console.log("err",i)}return r},u=async e=>{let r=[];try{const i=await n.get(`/self-manage/common-util/installed-model-files/${e}`);r=i.data?.models}catch(i){console.log("err",i)}return r},w=async()=>{if(window.ipcRenderer)return await(window.ipcRenderer?.invoke(e.RESTART_APP))},f=async()=>{if(window.ipcRenderer)return await(window.ipcRenderer?.invoke(e.EXIT_APP))},g=async n=>{if(window.ipcRenderer)return await(window.ipcRenderer?.invoke(e.KILL_PROCESSES,n))},p=async()=>{const r=await n.get("/self-manage/common-util/get-git-bash-in-root-dir-exist");if(console.log("response?.data?.dir",r?.data?.dir),r?.data?.dir)return!0;if(window.ipcRenderer)try{return await(window.ipcRenderer?.invoke(e.CHECK_GIT))}catch(i){return console.error("check git error",i),!0}},m=async()=>{if(window.ipcRenderer)return await(window.ipcRenderer?.invoke(e.INSTALL_GIT))},y=async n=>{if(window.ipcRenderer)return await(window.ipcRenderer?.invoke(e.CLOSE_RUNNING_WINDOW,n))};export{t as D,i as I,r as _,y as a,s as b,p as c,c as d,a as e,f,d as g,l as h,m as i,u as j,g as k,w as r,o as s};
